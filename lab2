
from itertools import product
from tokenize import Double


def transpose(matrix):
    result=[[0,0,0],[0,0,0]]
    for i in range(len(matrix)):
        
        for j in range(len(matrix[0])):
            
            result[j][i]=matrix[i][j]
            
    for r in result:
        print(r)   



A=[[1,2],[4,5],[3,6]]

#transpose(A)

def powers(matrix,n,m):
    new_matrix=[]
    kollumn=[]
    for i in matrix:
        kollumn=[]
        for j in range(n,m+1):
            kollumn.append(i**j)
        new_matrix=new_matrix+[kollumn]
        
    return new_matrix

#print(powers([2,3,4],0,2))
    
def matmul(matrix1,matrix2):
    
    product_matrix=[[0 for a in range(len(matrix2[0]))] for b in range(len(matrix1))]
    
    
    for i in range(len(matrix1)):
        for j in range(len(matrix2[0])):
            
            for k in range(len(matrix2)):
                product_matrix[i][j] += matrix1[i][k] * matrix2[k][j] 
                 
    return product_matrix
"""
I = [[1,0,0,0],
     [0,1,0,0],
     [0,0,1,0],
     [0,0,0,1]]

s1 = [[1, 2, 3], 
      [4, 5, 6]]
     
s3 = [[7,8,9,10],
      [11,12,13,14],
      [15,16,17,18]]

matmul(s3,I)
"""

def invert(matrix):
    invert2=matrix[0][0]*matrix[1][1]-matrix[0][1]*matrix[1][0]
    invert3=[[matrix[1][1]/invert2,-matrix[0][1]/invert2],[-matrix[1][0]/invert2,matrix[0][0]/invert2]]
    return invert3
"""
matrix=[[1,2],[3,4]]

print(matmul(matrix,invert(matrix)))
"""
def loadtxt(text_fil):
    ny_matris=[]
    item=[]
    
    file=open(text_fil)
    lines=file.readlines()
    file.close()
    
    for line in lines:
        place=line.split()
        for i in place:
            item.append(float(i))
        ny_matris.append(item)
        item=[]
    return ny_matris

#print(loadtxt("prog\lab2\chirps.txt"))
